# Generated by Django 5.1.3 on 2024-11-18 18:24

import django.db.models.deletion
import django.db.models.manager
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FoodBrands',
            fields=[
                ('FB_id', models.IntegerField(primary_key=True, serialize=False)),
                ('FB_name', models.CharField(max_length=25)),
                ('FB_dtime', models.CharField(max_length=25)),
                ('FB_image', models.ImageField(upload_to='pics')),
            ],
        ),
        migrations.CreateModel(
            name='FoodItems',
            fields=[
                ('FI_id', models.IntegerField(primary_key=True, serialize=False)),
                ('FI_name', models.CharField(max_length=25)),
                ('FI_image', models.ImageField(upload_to='pics')),
            ],
        ),
        migrations.CreateModel(
            name='Foods',
            fields=[
                ('F_id', models.IntegerField(primary_key=True, serialize=False)),
                ('F_name', models.CharField(max_length=25)),
                ('F_dtime', models.CharField(max_length=25)),
                ('F_rating', models.CharField(max_length=25)),
                ('F_discount', models.CharField(max_length=25)),
                ('F_price', models.IntegerField()),
                ('F_speciality', models.CharField(max_length=50)),
                ('F_type', models.CharField(choices=[('Veg', 'Veg'), ('Non-Veg', 'Non-Veg')], default='Veg', max_length=50)),
                ('F_image', models.ImageField(upload_to='pics')),
            ],
            managers=[
                ('prod', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Restaurants',
            fields=[
                ('R_id', models.IntegerField(primary_key=True, serialize=False)),
                ('R_name', models.CharField(max_length=25)),
                ('R_location', models.CharField(default=0, max_length=50)),
                ('R_distance', models.CharField(max_length=25)),
                ('R_rating', models.CharField(max_length=25)),
                ('R_discount', models.CharField(max_length=25)),
                ('R_price', models.IntegerField()),
                ('R_speciality', models.CharField(max_length=50)),
                ('R_type', models.CharField(choices=[('Veg', 'Veg'), ('Non-Veg', 'Non-Veg')], default='Veg', max_length=50)),
                ('R_image', models.ImageField(upload_to='pics')),
            ],
        ),
        migrations.CreateModel(
            name='Checkout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField()),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderFoodApp.foods')),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderFoodApp.foods')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('booking_id', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('phone_no', models.CharField(max_length=12)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('people_size', models.IntegerField()),
                ('user', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='orderFoodApp.restaurants')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserOTPDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The human-readable name of this device.', max_length=64)),
                ('confirmed', models.BooleanField(default=True, help_text='Is this device ready for use?')),
                ('user', models.ForeignKey(help_text='The user that this device belongs to.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orderFoodApp.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
